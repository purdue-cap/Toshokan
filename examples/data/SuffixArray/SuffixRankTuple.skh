struct SuffixRankTuple {
    int firstHalf;
    int secondHalf;
    int originalIndex;
}

struct Array_SuffixRankTuple {
    int length;
    SuffixRankTuple[length] A;
}

int SuffixRankTuple_compareTo(SuffixRankTuple self, SuffixRankTuple other) {
    int cmp = (self.firstHalf < other.firstHalf ? -1 : (self.firstHalf == other.firstHalf)? 0 : 1);
    if (cmp == 0) cmp = (self.secondHalf < other.secondHalf ? -1 : (self.secondHalf == other.secondHalf)? 0 : 1);
    if (cmp == 0) return (self.originalIndex < other.originalIndex ? -1 : (self.originalIndex == other.originalIndex)? 0 : 1);
    return cmp;
}

Array_SuffixRankTuple sort_SuffixRankTuple(Array_SuffixRankTuple a, int n) {
    for (int j = 0; j < n - 1; j++) {
        int iMin = j;
        for (int i = j + 1; i < n; i++) {
            SuffixRankTuple a1 = a.A[i];
            SuffixRankTuple a2 = a.A[iMin];
            int cmp = SuffixRankTuple_compareTo(a1, a2);
            if (cmp < 0) {
                iMin = i;
            }
        }
        if (iMin != j) {
            SuffixRankTuple tmp = a.A[j];
            a.A[j] = a.A[iMin];
            a.A[iMin] = tmp;
        }
    }
    return a;
}

