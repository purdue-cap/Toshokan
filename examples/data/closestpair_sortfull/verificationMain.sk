pragma options "--bnd-inline-amnt 5 --bnd-inbits 3 --bnd-cbits 3 --bnd-unroll-amnt 8 --slv-nativeints";
int N =5;

int[N] sort(int[N] input){
   int[N] output=input;
   int[N] done = 0;
   int k=0;
   for(int i=0; i<N; ++i){
      for(int j=i+1; j<N; ++j){
         if( output[j]< output[i]){
            int tmp = output[j];
            output[j] = output[i];
            output[i] = tmp;
         }
      }
   }
   return output;
}
generator int abs(int x){
	if(x<0) return -x;
	else return x;
}
generator int min(int x,int y){
	if(x < y) return x;
	else return y;
}
harness void main(int arr_0,int arr_1,int arr_2,int arr_3,int arr_4){//find closest pair distance in arr

    int[N] arr = {arr_0,arr_1,arr_2,arr_3,arr_4};
	if(N<2) return;
	int currmin = abs(arr[1] - arr[0]);
	for(int i=0;i<N;++i){
		for(int j=i+1;j<N;++j){
			currmin = min(abs(arr[j]-arr[i]),currmin);
		}
	}
	
	int[N] sarr = sort(arr);

	int currmin2 = sarr[??]-sarr[??];
	for(int i=??;{|i  (< | <= | > | >=) (??*N (+ | -) ??) |};i={| i (+|-) ??|}){
		currmin2 = min(sarr[{| i (+|-) ??|}] - sarr[i],currmin2);
	}
	assert(currmin == currmin2);
}