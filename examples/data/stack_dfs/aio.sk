pragma options "--bnd-inline-amnt 16 --bnd-inbits 4 --bnd-cbits 4 --bnd-unroll-amnt 16 --slv-nativeints";
int CAP=20;
struct Stack {
   int[CAP] storage;
   int pos;
}

int s_push(Stack s, int i) {
    if (s.pos >= CAP) {
        return 0;
    }
    s.storage[s.pos] = i;
    s.pos = s.pos + 1;
    return 1;
}

int s_pop(Stack s) {
    if (s.pos == 0) {
        return 0;
    }
    s.pos = s.pos - 1;
    return s.storage[s.pos];
}

Stack s_new() {
    return new Stack();
}

struct Node {
    int v;
    Node l;
    Node r;
}

Node construct_tree() {
    return new Node(
        v = 2,
        l = new Node(
            v = ??
        ),
        r = new Node (
            v = 4
        )
    );
}

bit dfs_search(Node root, int value) {
    
}

harness void main() {
    Node tree = construct_tree();
    assert tree.l.v == 3;
}
