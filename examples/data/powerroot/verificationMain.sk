pragma options "--bnd-inbits 5 --bnd-unroll-amnt 5 --bnd-cbits 3 --slv-nativeints";
int K=2;

int sqrt(int num){
    if (num==1) return 1;
    int low=0;
    int mid;//,square;
    int high=1+(num/2);
    while (low+1<high){
        mid=low+(high-low)/2;
        //square=mid*mid;
        if (num %mid == 0 && num/mid == mid)//num == mid*mid
            return mid;
        else if (mid<=num/mid)//mid*mid < num
            low=mid;
        else
            high=mid;
    }
    return low;
}

int twokroot(int num,int k){
	if(num==0) return 0;
    if (num==1) return 1;
    for(int i=2;i<num;i++){
		int kpow=i;
		for(int j=0;j<k;j++){
			kpow = (kpow*kpow);
			if(kpow > num) return i-1;
		}
		
    }
    return 1;
}


harness void main(int x){//find 2^k th root of x
	//k=0; x=1;
	int k=K;
	if(k==0 || x==0) return;
	
	int val = x;
	for(int i=??;{| i (< | > | <= | >=) {| (??)*k (+|-) (??) |} |};i++){
		if(val != 1 && val != 0){
			val = sqrt(val);
		}
	}
	assert(val !=0);
	assert(val == twokroot(x,k));
}
