pragma options "--bnd-inbits 5 --bnd-unroll-amnt 5 --bnd-cbits 3 ";
int K=2;

int sqrt(int num);

int twokroot(int num,int k){
	if(k==2){
		if(num <1) return 0;
		else if(num < 16) return 1;
		else return 2;
	}
	else{
		if(num <1) return 0;
		else return 1;
	}
}

bit condition(int i, int k) {
    int factor = {{holes.[0]}};
    int addor = {{holes.[1]}};
    int comparator;
    if ({{holes.[2]}}) {
        comparator = factor*k + addor;
    } else {
        comparator = factor*k - addor;
    }

    int comp = {{holes.[3]}}%4;

    if (comp == 0) {
        return i < comparator;
    }
    if (comp == 1) {
        return i > comparator;
    }
    if (comp == 2) {
        return i <= comparator;
    }
    if (comp == 3) {
        return i >= comparator;
    }
    return false;
}


harness void main(int x){//find 2^k th root of x
	//k=0; x=1;
	int k=K;
	if(k==0 || x==0) return;
	
	int val = x;
	for(int i={{holes.[4]}};condition(i, k);i++){
		if(val != 1 && val != 0){
			val = sqrt(val);
		}
	}
	assert(val !=0);
	assert(val == twokroot(x,k));
}
