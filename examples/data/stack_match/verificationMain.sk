pragma options "--bnd-inline-amnt 4 --bnd-inbits 4 --bnd-cbits 4 --bnd-unroll-amnt 16 --slv-nativeints";
int CAP=20;
struct Stack {
   int[CAP] storage;
   int pos;
}

int s_push(Stack s, int i) {
    if (s.pos >= CAP) {
        return 0;
    }
    s.storage[s.pos] = i;
    s.pos = s.pos + 1;
    return 1;
}

int s_pop(Stack s) {
    if (s.pos == 0) {
        return 0;
    }
    s.pos = s.pos - 1;
    return s.storage[s.pos];
}

Stack s_new() {
    return new Stack();
}

generator int expr(int s) {
    if (??) {
        return s + ??;
    }
    if (??) {
        return ?? * s;
    }
    if (??) {
        return expr(s);
    }
    return s;
}


harness void main(int p, int s, int offset) {
    assume p >= 2 && p <= 10;
    assume s >= 1 && s <= 4;
    Stack st = s_new();
    for (int i = 0; i < p; i++) {
        s_push(st, i * expr(s) + offset);
    }

    int last_pop = s_pop(st);
    for (int i = 0; i < p - 1; i++) {
        int new_pop = s_pop(st);
        assert new_pop + (s + 1) == last_pop;
        last_pop = new_pop;
    }
}
